#ifndef MONGODB_MANGER_H
#define MONGODB_MANGER_H

#include <cstdio>
#include <iostream>
#include <string>
#include <vector>

#include <bsoncxx/array/view.hpp>
#include <bsoncxx/builder/stream/document.hpp>
#include <bsoncxx/json.hpp>
#include <mongocxx/exception/exception.hpp>
#include <mongocxx/client.hpp>
#include <mongocxx/instance.hpp>
#include <bsoncxx/v_noabi/bsoncxx/builder/stream/helpers.hpp>

using namespace std;

//using bsoncxx::builder::stream::document;
using bsoncxx::builder::stream::finalize;
using bsoncxx::builder::stream::open_document;
using bsoncxx::builder::stream::close_document;

class MongoDBManger {
public:
	MongoDBManger(const std::string& db_name);
	~MongoDBManger();
public:
	bool UpdateOne(const std::string& collection_name, const std::string& key, const std::string& value);
	bool UpdateMany(const std::string& collection_name, const std::string& key, const std::string& value);
	bool DeleteOne(const std::string& collection_name, const std::string& key);
	bool DeleteMany(const std::string& collection_name, const std::string& key);
	bool QueryOne(const std::string& collection_name, const std::string& key,  std::vector<std::string>& values);
    bool QueryMany(const std::string& collection_name, const std::string& key,  std::vector<std::string>& values);
	bool Drop(const std::string& collection_name);
	const std::string& GetDBName() const;
private:
	std::string db_name_;
	mongocxx::uri uri_;
	mongocxx::client conn_;
	std::vector<std::string> collections;
};

#endif //MONGODB_MANGER_H
























